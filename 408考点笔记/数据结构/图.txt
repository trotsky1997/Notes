图的基本概念
1.Vertex顶点集合

Edge边集合:顶点的有序偶对
有向图中一般叫做弧(有向边)
2.顶点的入度和出度
无向图中度是顶点连的边数
有向图中分为出度(OD)和入度(ID),顶点度数为两者之和

图的总度数:无向图的总度数是边数的两倍 (握手定理)
有向图的总出度数等于弧数
3.完全图
图中任意两个顶点都边相连.
有向图

4.路径
<1,2>,<2,3>
路径长度是路径上边的长度
(1,4),(4,2),(2,3),()\


*5.简单回路:除了第一个和最后一个顶点外其他顶点不重复出现的回路.

*6.简单图:
1.不存在重复边2.不存在回边(自己指向自己)
<1,2><1,2>

连通图:任意两个顶点之间有路径.

连通分量(无向图)
子图:设有两个图,G=(V,E),G'=(V',E')
V' 包含于V,E'包含于E,就说G'是G的子图.

|V|是图中顶点的个数,也称作图的阶
图不可为空,至少要有一个顶点零条边.(不考虑零图)

不是V和E的任意子集都能构成G的子图,因为他可能根本就不是图.

连通分量:无向图的极大连通子图.

强连通图(有向图):任意一对顶点都双向联通.

极大的含义:1.顶点足够多2.极大连通子图中应该包含这些顶点关联的所有边


连通图的生成树:包含图中全部n个顶点,但只有n-1条边的极小连通子图
*结论1:如果一个图有n个顶点,并且有少于n-1条边,则此图必为非连通图
2.生成树去掉一条边变为非连通图,添加一条边就会有环

非连通图的生成森林:每个 连通分量 的 生成树 构成 生成森林


有向树:有一个顶点入度为零,其余顶点入度均为一的有向图





图的存储结构

1.邻接矩阵:(边的矩阵)
顶点数组+边的矩阵
重点描述顶点之间相邻关系
适用于稠密图
正无穷用MaxSize

2.邻接表:
头指针数组+边的链表
适用于稀疏图
稀疏图: |E|<<|V|,相反的话就是稠密图
3.邻接多重表
对无向图进行优化

要背的:1.dfs bfs

1.dfs
复杂度:空间复杂度:O(|V|)递归栈深度
时间复杂度:邻接表:O(|V|+|E|)
邻接矩阵:O(|V|^2)

2.bfs
复杂度:
空间:O(|V|),最坏时队列长度
时间:
入队O(|V|),访问顶点所有边,邻接表O(|E|),邻接矩阵O(|V|^2)

总的算起来是O(|V|+|E|)或者O(|V|^2)





1.prim 稠密图
树连最短边
时间复杂度 O(|V|^2)
空间复杂度 O(|V|)

2.kruscal 稀疏图
O(|E| log |E|) 假定使用快速排序对边进行排序
边排序,不能成环

bellman-ford算法
spfa算法


DAG有向无环图


最小生成树的形状不影响最小生成树的总权值(最小总权值).

最早发生时间:正算最大
最迟开始时间:逆推最小


事件的最迟发生时间是后继事件的最迟发生时间减去权值


1.拓扑排序推论
1.从入度为零的点开始筛选,实际是工程可以从此活动开始或者结束
2.拓扑排序不唯一,当活动排成线性时则唯一
3.若一个一般的图,其邻接矩阵为三角矩阵(就是DAG),则必存在拓扑序列,反之不成立
4.三角邻接矩阵的对应图,只要把序号从小到大排列就能得到拓扑排序序列







